@use "variables" as v;
@use "mixins" as m;

.header__container {
  background-color: v.$black;

  .header {
    padding: 0.81rem 1.44rem;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    max-width: 75rem;
    margin: 0 auto;

    @media only screen and (min-width: 768px) {
      gap: 2rem;
    }

    &__list {
      width: 100%;

      &__nav {
        align-items: center;
        display: flex;
        justify-content: space-between;
        align-items: center;

        @media only screen and (min-width: 768px) {
          justify-content: unset;
        }

        &-img {
          margin: 0 1.25rem 0 0;
          @include m.img-show(768px, none);

          @media only screen and (min-width: 1024px) {
            margin: 0 2.5rem 0 0;
          }
        }

        &-imgTablet {
          display: none;
          margin: 0 1.25rem 0 0;
          @include m.img-show(768px, block);
          @include m.img-show(1024px, none);
        }

        &-imgDesktop {
          display: none;
          margin: 0 2.5rem 0 0;
          @include m.img-show(1024px, block);
        }

        &__menuToggle {
          position: relative;
          z-index: 1;
          user-select: none;
          -webkit-user-select: none;

          input {
            display: block;
            width: 40px;
            height: 32px;
            position: absolute;
            top: -5px;
            left: -3px;
            cursor: pointer;
            opacity: 0;
            z-index: 2;

            &:checked ~ span {
              opacity: 1;
              transform: rotate(45deg) translate(5px, 0px);

              &:nth-last-child(3) {
                opacity: 0;
                transform: rotate(0deg) scale(0.2, 0.2);
              }

              &:nth-last-child(2) {
                transform: rotate(-45deg) translate(1px, 5px);
              }
            }

            &:checked ~ ul {
              transform: none;
            }

            @media only screen and (min-width: 768px) {
              display: none;
            }
          }

          span {
            display: block;
            width: 30px;
            height: 4px;
            margin-bottom: 5px;
            background-color: v.$vivid-yellow;
            position: relative;
            z-index: 1;
            transform-origin: 4px 0px;
            transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),
              background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),
              opacity 0.55s ease;

            &:first-child {
              transform-origin: 0% 0%;
            }

            &:nth-last-child(2) {
              transform-origin: 0% 100%;
            }

            @media only screen and (min-width: 768px) {
              display: none;
            }
          }
        }

        &__ul {
          position: absolute;
          width: 9rem;
          padding: 2.62rem 1.5rem 0.94rem;
          display: flex;
          flex-direction: column;
          margin: -42px 0 0 -91px;
          list-style: none;
          background-color: v.$dark-gray;
          transform-origin: 0% 0%;
          transform: translate(0, -100%);
          transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);

          @media only screen and (min-width: 768px) {
            position: relative;
            background-color: unset;
            transform-origin: unset;
            transform: unset;
            transition: unset;
            padding: 0;
            margin: 0;
            flex-direction: row;
            width: 100%;
            gap: 1.25rem;
          }

          @media only screen and (min-width: 1024px) {
            gap: 2.5rem;
          }

          &__li {
            cursor: pointer;
            padding: 0.5rem 0;
            border-bottom: 1px solid #ced4da;

            @media only screen and (min-width: 768px) {
              border-bottom: unset;
            }

            &:last-child {
              border-bottom: unset;
            }

            a {
              color: v.$white;
              font-size: 1rem;
              text-decoration-line: none;
              white-space: nowrap;

              @media only screen and (min-width: 768px) {
                font-size: 0.813rem;
              }

              @media only screen and (min-width: 768px) {
                font-size: 1rem;
              }

              &:hover {
                color: v.$vivid-yellow;
                font-weight: 700;
              }
            }
          }
        }
      }
    }

    &__button__container {
      display: none;
      gap: 1rem;

      @media only screen and (min-width: 768px) {
        display: flex;
      }

      &__input {
        height: 2.375rem;
        max-width: 10.625rem;
        outline: none;
        padding: 0.94rem;

        @media only screen and (min-width: 768px) {
          width: 9.063rem;
        }

        @media only screen and (min-width: 1024px) {
          width: 10.625rem;
        }

        &::placeholder {
          @media only screen and (min-width: 768px) {
            font-size: 0.813rem;
          }

          @media only screen and (min-width: 1024px) {
            font-size: 1rem;
          }
        }
      }

      &-search {
        @include m.button-search(unset, v.$white, v.$white, 500, 0.457px);

        @media only screen and (min-width: 768px) {
          font-size: 0.813rem;
        }

        @media only screen and (min-width: 1024px) {
          width: 5rem;
          font-size: 1rem;
        }
      }
    }
  }
}
